user  nginx;
worker_processes  auto;

# 錯誤日誌
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  # 日誌格式
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  # 訪問日誌
  access_log /var/log/nginx/access.log main;  # 使用定義的日誌格式

    # 配置全局的 SSL 協議版本
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_ciphers HIGH:!aNULL:!MD5;  # 安全的加密套件
  ssl_prefer_server_ciphers on;
#   ssl_certificate /etc/nginx/certs/AtriCrt.pem;
#   ssl_certificate_key /etc/nginx/certs/AtriKey.pem;

  # 如果沒有Upgrade頭，則$connection_upgrade爲close，否則爲upgrade
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }
#   upstream api_backend {
#     server 172.28.0.2:7000;
#   }
#   upstream web_frontend {
#     server 172.28.0.5:5000;
#   }
#   upstream web_socket {
#     server 172.28.0.2:8000;
#     keepalive 1000;
#   }

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;
  #gzip  on;

  server {
    listen [::]:80;
    listen 80;
    # listen [::]:443 ssl;
    # listen 443 ssl;
    server_name localhost;
    client_max_body_size 100G; #設定 request body 大小限制
    root /usr/share/nginx/html;
    index index.html;
    # CORS 標頭
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
    add_header 'Access-Control-Allow-Credentials' 'true';
    location / {
      proxy_pass http://web:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  include /etc/nginx/conf.d/*.conf;
}
